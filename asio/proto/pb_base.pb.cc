// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pb_base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PbBase {
class SubscribeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubscribeReq>
     _instance;
} _SubscribeReq_default_instance_;
class SubscribeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRsp>
     _instance;
} _SubscribeRsp_default_instance_;
class ServerInfoPubDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerInfoPub>
     _instance;
} _ServerInfoPub_default_instance_;
class HelloReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloReq>
     _instance;
} _HelloReq_default_instance_;
class HelloRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HelloRsp>
     _instance;
} _HelloRsp_default_instance_;
class EchoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EchoReq>
     _instance;
} _EchoReq_default_instance_;
class EchoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EchoRsp>
     _instance;
} _EchoRsp_default_instance_;
class HeartbeatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatReq>
     _instance;
} _HeartbeatReq_default_instance_;
class HeartbeatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRsp>
     _instance;
} _HeartbeatRsp_default_instance_;

namespace protobuf_pb_5fbase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeReq, typenamelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRsp, errorcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfoPub, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfoPub, hello_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReq, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRsp, hello_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoReq, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoRsp, errorcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EchoRsp, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatReq, memory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRsp, servertime_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SubscribeReq)},
  { 7, -1, sizeof(SubscribeRsp)},
  { 13, -1, sizeof(ServerInfoPub)},
  { 19, -1, sizeof(HelloReq)},
  { 27, -1, sizeof(HelloRsp)},
  { 33, -1, sizeof(EchoReq)},
  { 39, -1, sizeof(EchoRsp)},
  { 46, -1, sizeof(HeartbeatReq)},
  { 53, -1, sizeof(HeartbeatRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubscribeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubscribeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerInfoPub_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HelloRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EchoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EchoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartbeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartbeatRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pb_base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SubscribeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubscribeReq_default_instance_);_SubscribeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SubscribeRsp_default_instance_);_ServerInfoPub_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerInfoPub_default_instance_);_HelloReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloReq_default_instance_);_HelloRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HelloRsp_default_instance_);_EchoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EchoReq_default_instance_);_EchoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EchoRsp_default_instance_);_HeartbeatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeartbeatReq_default_instance_);_HeartbeatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HeartbeatRsp_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rpb_base.proto\022\006PbBase\"2\n\014SubscribeReq\022"
      "\014\n\004type\030\001 \001(\005\022\024\n\014typeNameList\030\002 \003(\t\"!\n\014S"
      "ubscribeRsp\022\021\n\terrorcode\030\001 \001(\005\"\036\n\rServer"
      "InfoPub\022\r\n\005hello\030\001 \001(\t\"5\n\010HelloReq\022\014\n\004na"
      "me\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\017\n\007address\030\003 \001(\014\"\031\n"
      "\010HelloRsp\022\r\n\005hello\030\001 \001(\014\"\032\n\007EchoReq\022\017\n\007c"
      "ontent\030\001 \001(\014\"-\n\007EchoRsp\022\021\n\terrorcode\030\001 \001"
      "(\005\022\017\n\007content\030\002 \001(\014\"+\n\014HeartbeatReq\022\013\n\003c"
      "pu\030\001 \001(\005\022\016\n\006memory\030\002 \001(\005\"\"\n\014HeartbeatRsp"
      "\022\022\n\nserverTime\030\001 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 388);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pb_base.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_pb_5fbase_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeReq::kTypeFieldNumber;
const int SubscribeReq::kTypeNameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeReq::SubscribeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.SubscribeReq)
}
SubscribeReq::SubscribeReq(const SubscribeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      typenamelist_(from.typenamelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:PbBase.SubscribeReq)
}

void SubscribeReq::SharedCtor() {
  type_ = 0;
  _cached_size_ = 0;
}

SubscribeReq::~SubscribeReq() {
  // @@protoc_insertion_point(destructor:PbBase.SubscribeReq)
  SharedDtor();
}

void SubscribeReq::SharedDtor() {
}

void SubscribeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeReq::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeReq& SubscribeReq::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubscribeReq* SubscribeReq::New(::google::protobuf::Arena* arena) const {
  SubscribeReq* n = new SubscribeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typenamelist_.Clear();
  type_ = 0;
  _internal_metadata_.Clear();
}

bool SubscribeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.SubscribeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string typeNameList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_typenamelist()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->typenamelist(this->typenamelist_size() - 1).data(),
            static_cast<int>(this->typenamelist(this->typenamelist_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbBase.SubscribeReq.typeNameList"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.SubscribeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.SubscribeReq)
  return false;
#undef DO_
}

void SubscribeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // repeated string typeNameList = 2;
  for (int i = 0, n = this->typenamelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->typenamelist(i).data(), static_cast<int>(this->typenamelist(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbBase.SubscribeReq.typeNameList");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->typenamelist(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.SubscribeReq)
}

::google::protobuf::uint8* SubscribeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // repeated string typeNameList = 2;
  for (int i = 0, n = this->typenamelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->typenamelist(i).data(), static_cast<int>(this->typenamelist(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbBase.SubscribeReq.typeNameList");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->typenamelist(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.SubscribeReq)
  return target;
}

size_t SubscribeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.SubscribeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string typeNameList = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->typenamelist_size());
  for (int i = 0, n = this->typenamelist_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->typenamelist(i));
  }

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.SubscribeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.SubscribeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.SubscribeReq)
    MergeFrom(*source);
  }
}

void SubscribeReq::MergeFrom(const SubscribeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.SubscribeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  typenamelist_.MergeFrom(from.typenamelist_);
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SubscribeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.SubscribeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeReq::CopyFrom(const SubscribeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.SubscribeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeReq::IsInitialized() const {
  return true;
}

void SubscribeReq::Swap(SubscribeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeReq::InternalSwap(SubscribeReq* other) {
  using std::swap;
  typenamelist_.InternalSwap(&other->typenamelist_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeReq::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribeReq

// int32 type = 1;
void SubscribeReq::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 SubscribeReq::type() const {
  // @@protoc_insertion_point(field_get:PbBase.SubscribeReq.type)
  return type_;
}
void SubscribeReq::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PbBase.SubscribeReq.type)
}

// repeated string typeNameList = 2;
int SubscribeReq::typenamelist_size() const {
  return typenamelist_.size();
}
void SubscribeReq::clear_typenamelist() {
  typenamelist_.Clear();
}
const ::std::string& SubscribeReq::typenamelist(int index) const {
  // @@protoc_insertion_point(field_get:PbBase.SubscribeReq.typeNameList)
  return typenamelist_.Get(index);
}
::std::string* SubscribeReq::mutable_typenamelist(int index) {
  // @@protoc_insertion_point(field_mutable:PbBase.SubscribeReq.typeNameList)
  return typenamelist_.Mutable(index);
}
void SubscribeReq::set_typenamelist(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PbBase.SubscribeReq.typeNameList)
  typenamelist_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SubscribeReq::set_typenamelist(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PbBase.SubscribeReq.typeNameList)
  typenamelist_.Mutable(index)->assign(std::move(value));
}
#endif
void SubscribeReq::set_typenamelist(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  typenamelist_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PbBase.SubscribeReq.typeNameList)
}
void SubscribeReq::set_typenamelist(int index, const char* value, size_t size) {
  typenamelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PbBase.SubscribeReq.typeNameList)
}
::std::string* SubscribeReq::add_typenamelist() {
  // @@protoc_insertion_point(field_add_mutable:PbBase.SubscribeReq.typeNameList)
  return typenamelist_.Add();
}
void SubscribeReq::add_typenamelist(const ::std::string& value) {
  typenamelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PbBase.SubscribeReq.typeNameList)
}
#if LANG_CXX11
void SubscribeReq::add_typenamelist(::std::string&& value) {
  typenamelist_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:PbBase.SubscribeReq.typeNameList)
}
#endif
void SubscribeReq::add_typenamelist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  typenamelist_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PbBase.SubscribeReq.typeNameList)
}
void SubscribeReq::add_typenamelist(const char* value, size_t size) {
  typenamelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PbBase.SubscribeReq.typeNameList)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SubscribeReq::typenamelist() const {
  // @@protoc_insertion_point(field_list:PbBase.SubscribeReq.typeNameList)
  return typenamelist_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SubscribeReq::mutable_typenamelist() {
  // @@protoc_insertion_point(field_mutable_list:PbBase.SubscribeReq.typeNameList)
  return &typenamelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRsp::kErrorcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRsp::SubscribeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.SubscribeRsp)
}
SubscribeRsp::SubscribeRsp(const SubscribeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:PbBase.SubscribeRsp)
}

void SubscribeRsp::SharedCtor() {
  errorcode_ = 0;
  _cached_size_ = 0;
}

SubscribeRsp::~SubscribeRsp() {
  // @@protoc_insertion_point(destructor:PbBase.SubscribeRsp)
  SharedDtor();
}

void SubscribeRsp::SharedDtor() {
}

void SubscribeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRsp::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRsp& SubscribeRsp::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubscribeRsp* SubscribeRsp::New(::google::protobuf::Arena* arena) const {
  SubscribeRsp* n = new SubscribeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.SubscribeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errorcode_ = 0;
  _internal_metadata_.Clear();
}

bool SubscribeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.SubscribeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 errorcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.SubscribeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.SubscribeRsp)
  return false;
#undef DO_
}

void SubscribeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.SubscribeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.SubscribeRsp)
}

::google::protobuf::uint8* SubscribeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.SubscribeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.SubscribeRsp)
  return target;
}

size_t SubscribeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.SubscribeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.SubscribeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.SubscribeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.SubscribeRsp)
    MergeFrom(*source);
  }
}

void SubscribeRsp::MergeFrom(const SubscribeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.SubscribeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void SubscribeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.SubscribeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRsp::CopyFrom(const SubscribeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.SubscribeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRsp::IsInitialized() const {
  return true;
}

void SubscribeRsp::Swap(SubscribeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRsp::InternalSwap(SubscribeRsp* other) {
  using std::swap;
  swap(errorcode_, other->errorcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeRsp::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribeRsp

// int32 errorcode = 1;
void SubscribeRsp::clear_errorcode() {
  errorcode_ = 0;
}
::google::protobuf::int32 SubscribeRsp::errorcode() const {
  // @@protoc_insertion_point(field_get:PbBase.SubscribeRsp.errorcode)
  return errorcode_;
}
void SubscribeRsp::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:PbBase.SubscribeRsp.errorcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfoPub::kHelloFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfoPub::ServerInfoPub()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.ServerInfoPub)
}
ServerInfoPub::ServerInfoPub(const ServerInfoPub& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hello_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hello().size() > 0) {
    hello_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hello_);
  }
  // @@protoc_insertion_point(copy_constructor:PbBase.ServerInfoPub)
}

void ServerInfoPub::SharedCtor() {
  hello_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServerInfoPub::~ServerInfoPub() {
  // @@protoc_insertion_point(destructor:PbBase.ServerInfoPub)
  SharedDtor();
}

void ServerInfoPub::SharedDtor() {
  hello_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfoPub::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerInfoPub::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfoPub& ServerInfoPub::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerInfoPub* ServerInfoPub::New(::google::protobuf::Arena* arena) const {
  ServerInfoPub* n = new ServerInfoPub;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerInfoPub::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.ServerInfoPub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hello_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServerInfoPub::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.ServerInfoPub)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string hello = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hello()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hello().data(), static_cast<int>(this->hello().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbBase.ServerInfoPub.hello"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.ServerInfoPub)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.ServerInfoPub)
  return false;
#undef DO_
}

void ServerInfoPub::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.ServerInfoPub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hello = 1;
  if (this->hello().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hello().data(), static_cast<int>(this->hello().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbBase.ServerInfoPub.hello");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hello(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.ServerInfoPub)
}

::google::protobuf::uint8* ServerInfoPub::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.ServerInfoPub)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string hello = 1;
  if (this->hello().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hello().data(), static_cast<int>(this->hello().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbBase.ServerInfoPub.hello");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hello(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.ServerInfoPub)
  return target;
}

size_t ServerInfoPub::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.ServerInfoPub)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hello = 1;
  if (this->hello().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hello());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfoPub::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.ServerInfoPub)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfoPub* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfoPub>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.ServerInfoPub)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.ServerInfoPub)
    MergeFrom(*source);
  }
}

void ServerInfoPub::MergeFrom(const ServerInfoPub& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.ServerInfoPub)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hello().size() > 0) {

    hello_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hello_);
  }
}

void ServerInfoPub::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.ServerInfoPub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfoPub::CopyFrom(const ServerInfoPub& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.ServerInfoPub)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfoPub::IsInitialized() const {
  return true;
}

void ServerInfoPub::Swap(ServerInfoPub* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfoPub::InternalSwap(ServerInfoPub* other) {
  using std::swap;
  hello_.Swap(&other->hello_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerInfoPub::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerInfoPub

// string hello = 1;
void ServerInfoPub::clear_hello() {
  hello_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerInfoPub::hello() const {
  // @@protoc_insertion_point(field_get:PbBase.ServerInfoPub.hello)
  return hello_.GetNoArena();
}
void ServerInfoPub::set_hello(const ::std::string& value) {
  
  hello_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbBase.ServerInfoPub.hello)
}
#if LANG_CXX11
void ServerInfoPub::set_hello(::std::string&& value) {
  
  hello_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbBase.ServerInfoPub.hello)
}
#endif
void ServerInfoPub::set_hello(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hello_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbBase.ServerInfoPub.hello)
}
void ServerInfoPub::set_hello(const char* value, size_t size) {
  
  hello_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbBase.ServerInfoPub.hello)
}
::std::string* ServerInfoPub::mutable_hello() {
  
  // @@protoc_insertion_point(field_mutable:PbBase.ServerInfoPub.hello)
  return hello_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerInfoPub::release_hello() {
  // @@protoc_insertion_point(field_release:PbBase.ServerInfoPub.hello)
  
  return hello_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerInfoPub::set_allocated_hello(::std::string* hello) {
  if (hello != NULL) {
    
  } else {
    
  }
  hello_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hello);
  // @@protoc_insertion_point(field_set_allocated:PbBase.ServerInfoPub.hello)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloReq::kNameFieldNumber;
const int HelloReq::kIdFieldNumber;
const int HelloReq::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloReq::HelloReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.HelloReq)
}
HelloReq::HelloReq(const HelloReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:PbBase.HelloReq)
}

void HelloReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

HelloReq::~HelloReq() {
  // @@protoc_insertion_point(destructor:PbBase.HelloReq)
  SharedDtor();
}

void HelloReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloReq::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloReq& HelloReq::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloReq* HelloReq::New(::google::protobuf::Arena* arena) const {
  HelloReq* n = new HelloReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.HelloReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool HelloReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.HelloReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PbBase.HelloReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.HelloReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.HelloReq)
  return false;
#undef DO_
}

void HelloReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.HelloReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbBase.HelloReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // bytes address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.HelloReq)
}

::google::protobuf::uint8* HelloReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.HelloReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PbBase.HelloReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // bytes address = 3;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.HelloReq)
  return target;
}

size_t HelloReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.HelloReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.HelloReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.HelloReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.HelloReq)
    MergeFrom(*source);
  }
}

void HelloReq::MergeFrom(const HelloReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.HelloReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void HelloReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.HelloReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReq::CopyFrom(const HelloReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.HelloReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReq::IsInitialized() const {
  return true;
}

void HelloReq::Swap(HelloReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloReq::InternalSwap(HelloReq* other) {
  using std::swap;
  name_.Swap(&other->name_);
  address_.Swap(&other->address_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloReq::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloReq

// string name = 1;
void HelloReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloReq::name() const {
  // @@protoc_insertion_point(field_get:PbBase.HelloReq.name)
  return name_.GetNoArena();
}
void HelloReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbBase.HelloReq.name)
}
#if LANG_CXX11
void HelloReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbBase.HelloReq.name)
}
#endif
void HelloReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbBase.HelloReq.name)
}
void HelloReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbBase.HelloReq.name)
}
::std::string* HelloReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PbBase.HelloReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloReq::release_name() {
  // @@protoc_insertion_point(field_release:PbBase.HelloReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PbBase.HelloReq.name)
}

// int32 id = 2;
void HelloReq::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 HelloReq::id() const {
  // @@protoc_insertion_point(field_get:PbBase.HelloReq.id)
  return id_;
}
void HelloReq::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:PbBase.HelloReq.id)
}

// bytes address = 3;
void HelloReq::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloReq::address() const {
  // @@protoc_insertion_point(field_get:PbBase.HelloReq.address)
  return address_.GetNoArena();
}
void HelloReq::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbBase.HelloReq.address)
}
#if LANG_CXX11
void HelloReq::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbBase.HelloReq.address)
}
#endif
void HelloReq::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbBase.HelloReq.address)
}
void HelloReq::set_address(const void* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbBase.HelloReq.address)
}
::std::string* HelloReq::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:PbBase.HelloReq.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloReq::release_address() {
  // @@protoc_insertion_point(field_release:PbBase.HelloReq.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloReq::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:PbBase.HelloReq.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloRsp::kHelloFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloRsp::HelloRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.HelloRsp)
}
HelloRsp::HelloRsp(const HelloRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hello_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hello().size() > 0) {
    hello_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hello_);
  }
  // @@protoc_insertion_point(copy_constructor:PbBase.HelloRsp)
}

void HelloRsp::SharedCtor() {
  hello_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

HelloRsp::~HelloRsp() {
  // @@protoc_insertion_point(destructor:PbBase.HelloRsp)
  SharedDtor();
}

void HelloRsp::SharedDtor() {
  hello_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloRsp::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloRsp& HelloRsp::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HelloRsp* HelloRsp::New(::google::protobuf::Arena* arena) const {
  HelloRsp* n = new HelloRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.HelloRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hello_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HelloRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.HelloRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hello = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hello()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.HelloRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.HelloRsp)
  return false;
#undef DO_
}

void HelloRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.HelloRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hello = 1;
  if (this->hello().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hello(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.HelloRsp)
}

::google::protobuf::uint8* HelloRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.HelloRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hello = 1;
  if (this->hello().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hello(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.HelloRsp)
  return target;
}

size_t HelloRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.HelloRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hello = 1;
  if (this->hello().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hello());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.HelloRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.HelloRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.HelloRsp)
    MergeFrom(*source);
  }
}

void HelloRsp::MergeFrom(const HelloRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.HelloRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hello().size() > 0) {

    hello_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hello_);
  }
}

void HelloRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.HelloRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRsp::CopyFrom(const HelloRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.HelloRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRsp::IsInitialized() const {
  return true;
}

void HelloRsp::Swap(HelloRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloRsp::InternalSwap(HelloRsp* other) {
  using std::swap;
  hello_.Swap(&other->hello_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloRsp::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloRsp

// bytes hello = 1;
void HelloRsp::clear_hello() {
  hello_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& HelloRsp::hello() const {
  // @@protoc_insertion_point(field_get:PbBase.HelloRsp.hello)
  return hello_.GetNoArena();
}
void HelloRsp::set_hello(const ::std::string& value) {
  
  hello_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbBase.HelloRsp.hello)
}
#if LANG_CXX11
void HelloRsp::set_hello(::std::string&& value) {
  
  hello_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbBase.HelloRsp.hello)
}
#endif
void HelloRsp::set_hello(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hello_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbBase.HelloRsp.hello)
}
void HelloRsp::set_hello(const void* value, size_t size) {
  
  hello_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbBase.HelloRsp.hello)
}
::std::string* HelloRsp::mutable_hello() {
  
  // @@protoc_insertion_point(field_mutable:PbBase.HelloRsp.hello)
  return hello_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HelloRsp::release_hello() {
  // @@protoc_insertion_point(field_release:PbBase.HelloRsp.hello)
  
  return hello_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HelloRsp::set_allocated_hello(::std::string* hello) {
  if (hello != NULL) {
    
  } else {
    
  }
  hello_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hello);
  // @@protoc_insertion_point(field_set_allocated:PbBase.HelloRsp.hello)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoReq::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoReq::EchoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.EchoReq)
}
EchoReq::EchoReq(const EchoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:PbBase.EchoReq)
}

void EchoReq::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EchoReq::~EchoReq() {
  // @@protoc_insertion_point(destructor:PbBase.EchoReq)
  SharedDtor();
}

void EchoReq::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoReq::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoReq& EchoReq::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

EchoReq* EchoReq::New(::google::protobuf::Arena* arena) const {
  EchoReq* n = new EchoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.EchoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EchoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.EchoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.EchoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.EchoReq)
  return false;
#undef DO_
}

void EchoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.EchoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.EchoReq)
}

::google::protobuf::uint8* EchoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.EchoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes content = 1;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.EchoReq)
  return target;
}

size_t EchoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.EchoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 1;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.EchoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.EchoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.EchoReq)
    MergeFrom(*source);
  }
}

void EchoReq::MergeFrom(const EchoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.EchoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void EchoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.EchoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoReq::CopyFrom(const EchoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.EchoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoReq::IsInitialized() const {
  return true;
}

void EchoReq::Swap(EchoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoReq::InternalSwap(EchoReq* other) {
  using std::swap;
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoReq::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoReq

// bytes content = 1;
void EchoReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EchoReq::content() const {
  // @@protoc_insertion_point(field_get:PbBase.EchoReq.content)
  return content_.GetNoArena();
}
void EchoReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbBase.EchoReq.content)
}
#if LANG_CXX11
void EchoReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbBase.EchoReq.content)
}
#endif
void EchoReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbBase.EchoReq.content)
}
void EchoReq::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbBase.EchoReq.content)
}
::std::string* EchoReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:PbBase.EchoReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EchoReq::release_content() {
  // @@protoc_insertion_point(field_release:PbBase.EchoReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EchoReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:PbBase.EchoReq.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoRsp::kErrorcodeFieldNumber;
const int EchoRsp::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoRsp::EchoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.EchoRsp)
}
EchoRsp::EchoRsp(const EchoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  errorcode_ = from.errorcode_;
  // @@protoc_insertion_point(copy_constructor:PbBase.EchoRsp)
}

void EchoRsp::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 0;
  _cached_size_ = 0;
}

EchoRsp::~EchoRsp() {
  // @@protoc_insertion_point(destructor:PbBase.EchoRsp)
  SharedDtor();
}

void EchoRsp::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoRsp::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoRsp& EchoRsp::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

EchoRsp* EchoRsp::New(::google::protobuf::Arena* arena) const {
  EchoRsp* n = new EchoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EchoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.EchoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 0;
  _internal_metadata_.Clear();
}

bool EchoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.EchoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 errorcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.EchoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.EchoRsp)
  return false;
#undef DO_
}

void EchoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.EchoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.EchoRsp)
}

::google::protobuf::uint8* EchoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.EchoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.EchoRsp)
  return target;
}

size_t EchoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.EchoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // int32 errorcode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.EchoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.EchoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.EchoRsp)
    MergeFrom(*source);
  }
}

void EchoRsp::MergeFrom(const EchoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.EchoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
}

void EchoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.EchoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoRsp::CopyFrom(const EchoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.EchoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoRsp::IsInitialized() const {
  return true;
}

void EchoRsp::Swap(EchoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoRsp::InternalSwap(EchoRsp* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(errorcode_, other->errorcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoRsp::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EchoRsp

// int32 errorcode = 1;
void EchoRsp::clear_errorcode() {
  errorcode_ = 0;
}
::google::protobuf::int32 EchoRsp::errorcode() const {
  // @@protoc_insertion_point(field_get:PbBase.EchoRsp.errorcode)
  return errorcode_;
}
void EchoRsp::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:PbBase.EchoRsp.errorcode)
}

// bytes content = 2;
void EchoRsp::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EchoRsp::content() const {
  // @@protoc_insertion_point(field_get:PbBase.EchoRsp.content)
  return content_.GetNoArena();
}
void EchoRsp::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PbBase.EchoRsp.content)
}
#if LANG_CXX11
void EchoRsp::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PbBase.EchoRsp.content)
}
#endif
void EchoRsp::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PbBase.EchoRsp.content)
}
void EchoRsp::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PbBase.EchoRsp.content)
}
::std::string* EchoRsp::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:PbBase.EchoRsp.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EchoRsp::release_content() {
  // @@protoc_insertion_point(field_release:PbBase.EchoRsp.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EchoRsp::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:PbBase.EchoRsp.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatReq::kCpuFieldNumber;
const int HeartbeatReq::kMemoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatReq::HeartbeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.HeartbeatReq)
}
HeartbeatReq::HeartbeatReq(const HeartbeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cpu_, &from.cpu_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_) -
    reinterpret_cast<char*>(&cpu_)) + sizeof(memory_));
  // @@protoc_insertion_point(copy_constructor:PbBase.HeartbeatReq)
}

void HeartbeatReq::SharedCtor() {
  ::memset(&cpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_) -
      reinterpret_cast<char*>(&cpu_)) + sizeof(memory_));
  _cached_size_ = 0;
}

HeartbeatReq::~HeartbeatReq() {
  // @@protoc_insertion_point(destructor:PbBase.HeartbeatReq)
  SharedDtor();
}

void HeartbeatReq::SharedDtor() {
}

void HeartbeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatReq::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatReq& HeartbeatReq::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartbeatReq* HeartbeatReq::New(::google::protobuf::Arena* arena) const {
  HeartbeatReq* n = new HeartbeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_) -
      reinterpret_cast<char*>(&cpu_)) + sizeof(memory_));
  _internal_metadata_.Clear();
}

bool HeartbeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.HeartbeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cpu = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cpu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 memory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &memory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.HeartbeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.HeartbeatReq)
  return false;
#undef DO_
}

void HeartbeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cpu = 1;
  if (this->cpu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cpu(), output);
  }

  // int32 memory = 2;
  if (this->memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->memory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.HeartbeatReq)
}

::google::protobuf::uint8* HeartbeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.HeartbeatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 cpu = 1;
  if (this->cpu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cpu(), target);
  }

  // int32 memory = 2;
  if (this->memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->memory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.HeartbeatReq)
  return target;
}

size_t HeartbeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.HeartbeatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 cpu = 1;
  if (this->cpu() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cpu());
  }

  // int32 memory = 2;
  if (this->memory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->memory());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.HeartbeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.HeartbeatReq)
    MergeFrom(*source);
  }
}

void HeartbeatReq::MergeFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.HeartbeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpu() != 0) {
    set_cpu(from.cpu());
  }
  if (from.memory() != 0) {
    set_memory(from.memory());
  }
}

void HeartbeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatReq::CopyFrom(const HeartbeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.HeartbeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatReq::IsInitialized() const {
  return true;
}

void HeartbeatReq::Swap(HeartbeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatReq::InternalSwap(HeartbeatReq* other) {
  using std::swap;
  swap(cpu_, other->cpu_);
  swap(memory_, other->memory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatReq::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatReq

// int32 cpu = 1;
void HeartbeatReq::clear_cpu() {
  cpu_ = 0;
}
::google::protobuf::int32 HeartbeatReq::cpu() const {
  // @@protoc_insertion_point(field_get:PbBase.HeartbeatReq.cpu)
  return cpu_;
}
void HeartbeatReq::set_cpu(::google::protobuf::int32 value) {
  
  cpu_ = value;
  // @@protoc_insertion_point(field_set:PbBase.HeartbeatReq.cpu)
}

// int32 memory = 2;
void HeartbeatReq::clear_memory() {
  memory_ = 0;
}
::google::protobuf::int32 HeartbeatReq::memory() const {
  // @@protoc_insertion_point(field_get:PbBase.HeartbeatReq.memory)
  return memory_;
}
void HeartbeatReq::set_memory(::google::protobuf::int32 value) {
  
  memory_ = value;
  // @@protoc_insertion_point(field_set:PbBase.HeartbeatReq.memory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatRsp::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRsp::HeartbeatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_pb_5fbase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PbBase.HeartbeatRsp)
}
HeartbeatRsp::HeartbeatRsp(const HeartbeatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  servertime_ = from.servertime_;
  // @@protoc_insertion_point(copy_constructor:PbBase.HeartbeatRsp)
}

void HeartbeatRsp::SharedCtor() {
  servertime_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

HeartbeatRsp::~HeartbeatRsp() {
  // @@protoc_insertion_point(destructor:PbBase.HeartbeatRsp)
  SharedDtor();
}

void HeartbeatRsp::SharedDtor() {
}

void HeartbeatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatRsp::descriptor() {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatRsp& HeartbeatRsp::default_instance() {
  protobuf_pb_5fbase_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartbeatRsp* HeartbeatRsp::New(::google::protobuf::Arena* arena) const {
  HeartbeatRsp* n = new HeartbeatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:PbBase.HeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servertime_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool HeartbeatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PbBase.HeartbeatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 serverTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PbBase.HeartbeatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PbBase.HeartbeatRsp)
  return false;
#undef DO_
}

void HeartbeatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PbBase.HeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 serverTime = 1;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->servertime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PbBase.HeartbeatRsp)
}

::google::protobuf::uint8* HeartbeatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PbBase.HeartbeatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 serverTime = 1;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->servertime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbBase.HeartbeatRsp)
  return target;
}

size_t HeartbeatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbBase.HeartbeatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 serverTime = 1;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PbBase.HeartbeatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PbBase.HeartbeatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PbBase.HeartbeatRsp)
    MergeFrom(*source);
  }
}

void HeartbeatRsp::MergeFrom(const HeartbeatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbBase.HeartbeatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
}

void HeartbeatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PbBase.HeartbeatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRsp::CopyFrom(const HeartbeatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbBase.HeartbeatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRsp::IsInitialized() const {
  return true;
}

void HeartbeatRsp::Swap(HeartbeatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRsp::InternalSwap(HeartbeatRsp* other) {
  using std::swap;
  swap(servertime_, other->servertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatRsp::GetMetadata() const {
  protobuf_pb_5fbase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pb_5fbase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatRsp

// int64 serverTime = 1;
void HeartbeatRsp::clear_servertime() {
  servertime_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 HeartbeatRsp::servertime() const {
  // @@protoc_insertion_point(field_get:PbBase.HeartbeatRsp.serverTime)
  return servertime_;
}
void HeartbeatRsp::set_servertime(::google::protobuf::int64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:PbBase.HeartbeatRsp.serverTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PbBase

// @@protoc_insertion_point(global_scope)
